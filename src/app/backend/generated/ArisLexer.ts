// Generated from src/antlr4/Aris.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class ArisLexer extends Lexer {
	public static readonly ADD = 1;
	public static readonly SUB = 2;
	public static readonly COPY = 3;
	public static readonly MOVE = 4;
	public static readonly TO = 5;
	public static readonly FROM = 6;
	public static readonly INPUT = 7;
	public static readonly OUTPUT = 8;
	public static readonly LOOP = 9;
	public static readonly IFZERO = 10;
	public static readonly IFNOTZERO = 11;
	public static readonly IFPOS = 12;
	public static readonly IFNEG = 13;
	public static readonly INCR = 14;
	public static readonly DECR = 15;
	public static readonly CURLY_OPEN = 16;
	public static readonly CURLY_CLOSED = 17;
	public static readonly MEMORY_SLOT = 18;
	public static readonly MEMORY_SLOT_NUMBER = 19;
	public static readonly MEMORY_SLOT_NAME = 20;
	public static readonly NEWLINE = 21;
	public static readonly LINE_COMMENT = 22;
	public static readonly UNIDENTIFIED = 23;
	public static readonly WHITESPACE = 24;
	public static readonly ERROR_CHARACTER = 25;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"ADD", "SUB", "COPY", "MOVE", "TO", "FROM", "INPUT", "OUTPUT", "LOOP", 
		"IFZERO", "IFNOTZERO", "IFPOS", "IFNEG", "INCR", "DECR", "CURLY_OPEN", 
		"CURLY_CLOSED", "MEMORY_SLOT", "MEMORY_SLOT_NUMBER", "MEMORY_SLOT_NAME", 
		"NEWLINE", "LINE_COMMENT", "UNIDENTIFIED", "WHITESPACE", "ERROR_CHARACTER",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'add'", "'sub'", "'copy'", "'move'", "'to'", "'from'", "'input'", 
		"'output'", "'loop'", "'ifzero'", "'ifnotzero'", "'ifpos'", "'ifneg'", 
		"'incr'", "'decr'", "'{'", "'}'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "ADD", "SUB", "COPY", "MOVE", "TO", "FROM", "INPUT", "OUTPUT", 
		"LOOP", "IFZERO", "IFNOTZERO", "IFPOS", "IFNEG", "INCR", "DECR", "CURLY_OPEN", 
		"CURLY_CLOSED", "MEMORY_SLOT", "MEMORY_SLOT_NUMBER", "MEMORY_SLOT_NAME", 
		"NEWLINE", "LINE_COMMENT", "UNIDENTIFIED", "WHITESPACE", "ERROR_CHARACTER",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ArisLexer._LITERAL_NAMES, ArisLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return ArisLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(ArisLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Aris.g4"; }

	// @Override
	public get ruleNames(): string[] { return ArisLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return ArisLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return ArisLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return ArisLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x1B\xBB\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x03\x02\x03\x02\x03\x02" +
		"\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04" +
		"\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06" +
		"\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b" +
		"\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03" +
		"\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03" +
		"\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
		"\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03" +
		"\x11\x03\x12\x03\x12\x03\x13\x03\x13\x05\x13\x8F\n\x13\x03\x14\x06\x14" +
		"\x92\n\x14\r\x14\x0E\x14\x93\x03\x15\x06\x15\x97\n\x15\r\x15\x0E\x15\x98" +
		"\x03\x16\x05\x16\x9C\n\x16\x03\x16\x03\x16\x06\x16\xA0\n\x16\r\x16\x0E" +
		"\x16\xA1\x03\x17\x03\x17\x03\x17\x03\x17\x07\x17\xA8\n\x17\f\x17\x0E\x17" +
		"\xAB\v\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x06\x18\xB2\n\x18\r" +
		"\x18\x0E\x18\xB3\x03\x19\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\xA9" +
		"\x02\x02\x1B\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r" +
		"\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B" +
		"\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15" +
		")\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B\x03\x02\x06\x03" +
		"\x022;\x03\x02c|\x06\x02//2;aac|\x04\x02\v\v\"\"\x02\xC2\x02\x03\x03\x02" +
		"\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02" +
		"\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02" +
		"\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02" +
		"\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02" +
		"\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02" +
		"\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02" +
		")\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
		"\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x035\x03\x02\x02\x02" +
		"\x059\x03\x02\x02\x02\x07=\x03\x02\x02\x02\tB\x03\x02\x02\x02\vG\x03\x02" +
		"\x02\x02\rJ\x03\x02\x02\x02\x0FO\x03\x02\x02\x02\x11U\x03\x02\x02\x02" +
		"\x13\\\x03\x02\x02\x02\x15a\x03\x02\x02\x02\x17h\x03\x02\x02\x02\x19r" +
		"\x03\x02\x02\x02\x1Bx\x03\x02\x02\x02\x1D~\x03\x02\x02\x02\x1F\x83\x03" +
		"\x02\x02\x02!\x88\x03\x02\x02\x02#\x8A\x03\x02\x02\x02%\x8E\x03\x02\x02" +
		"\x02\'\x91\x03\x02\x02\x02)\x96\x03\x02\x02\x02+\x9F\x03\x02\x02\x02-" +
		"\xA3\x03\x02\x02\x02/\xB1\x03\x02\x02\x021\xB5\x03\x02\x02\x023\xB9\x03" +
		"\x02\x02\x0256\x07c\x02\x0267\x07f\x02\x0278\x07f\x02\x028\x04\x03\x02" +
		"\x02\x029:\x07u\x02\x02:;\x07w\x02\x02;<\x07d\x02\x02<\x06\x03\x02\x02" +
		"\x02=>\x07e\x02\x02>?\x07q\x02\x02?@\x07r\x02\x02@A\x07{\x02\x02A\b\x03" +
		"\x02\x02\x02BC\x07o\x02\x02CD\x07q\x02\x02DE\x07x\x02\x02EF\x07g\x02\x02" +
		"F\n\x03\x02\x02\x02GH\x07v\x02\x02HI\x07q\x02\x02I\f\x03\x02\x02\x02J" +
		"K\x07h\x02\x02KL\x07t\x02\x02LM\x07q\x02\x02MN\x07o\x02\x02N\x0E\x03\x02" +
		"\x02\x02OP\x07k\x02\x02PQ\x07p\x02\x02QR\x07r\x02\x02RS\x07w\x02\x02S" +
		"T\x07v\x02\x02T\x10\x03\x02\x02\x02UV\x07q\x02\x02VW\x07w\x02\x02WX\x07" +
		"v\x02\x02XY\x07r\x02\x02YZ\x07w\x02\x02Z[\x07v\x02\x02[\x12\x03\x02\x02" +
		"\x02\\]\x07n\x02\x02]^\x07q\x02\x02^_\x07q\x02\x02_`\x07r\x02\x02`\x14" +
		"\x03\x02\x02\x02ab\x07k\x02\x02bc\x07h\x02\x02cd\x07|\x02\x02de\x07g\x02" +
		"\x02ef\x07t\x02\x02fg\x07q\x02\x02g\x16\x03\x02\x02\x02hi\x07k\x02\x02" +
		"ij\x07h\x02\x02jk\x07p\x02\x02kl\x07q\x02\x02lm\x07v\x02\x02mn\x07|\x02" +
		"\x02no\x07g\x02\x02op\x07t\x02\x02pq\x07q\x02\x02q\x18\x03\x02\x02\x02" +
		"rs\x07k\x02\x02st\x07h\x02\x02tu\x07r\x02\x02uv\x07q\x02\x02vw\x07u\x02" +
		"\x02w\x1A\x03\x02\x02\x02xy\x07k\x02\x02yz\x07h\x02\x02z{\x07p\x02\x02" +
		"{|\x07g\x02\x02|}\x07i\x02\x02}\x1C\x03\x02\x02\x02~\x7F\x07k\x02\x02" +
		"\x7F\x80\x07p\x02\x02\x80\x81\x07e\x02\x02\x81\x82\x07t\x02\x02\x82\x1E" +
		"\x03\x02\x02\x02\x83\x84\x07f\x02\x02\x84\x85\x07g\x02\x02\x85\x86\x07" +
		"e\x02\x02\x86\x87\x07t\x02\x02\x87 \x03\x02\x02\x02\x88\x89\x07}\x02\x02" +
		"\x89\"\x03\x02\x02\x02\x8A\x8B\x07\x7F\x02\x02\x8B$\x03\x02\x02\x02\x8C" +
		"\x8F\x05\'\x14\x02\x8D\x8F\x05)\x15\x02\x8E\x8C\x03\x02\x02\x02\x8E\x8D" +
		"\x03\x02\x02\x02\x8F&\x03\x02\x02\x02\x90\x92\t\x02\x02\x02\x91\x90\x03" +
		"\x02\x02\x02\x92\x93\x03\x02\x02\x02\x93\x91\x03\x02\x02\x02\x93\x94\x03" +
		"\x02\x02\x02\x94(\x03\x02\x02\x02\x95\x97\t\x03\x02\x02\x96\x95\x03\x02" +
		"\x02\x02\x97\x98\x03\x02\x02\x02\x98\x96\x03\x02\x02\x02\x98\x99\x03\x02" +
		"\x02\x02\x99*\x03\x02\x02\x02\x9A\x9C\x07\x0F\x02\x02\x9B\x9A\x03\x02" +
		"\x02\x02\x9B\x9C\x03\x02\x02\x02\x9C\x9D\x03\x02\x02\x02\x9D\xA0\x07\f" +
		"\x02\x02\x9E\xA0\x07\x0F\x02\x02\x9F\x9B\x03\x02\x02\x02\x9F\x9E\x03\x02" +
		"\x02\x02\xA0\xA1\x03\x02\x02\x02\xA1\x9F\x03\x02\x02\x02\xA1\xA2\x03\x02" +
		"\x02\x02\xA2,\x03\x02\x02\x02\xA3\xA4\x071\x02\x02\xA4\xA5\x071\x02\x02" +
		"\xA5\xA9\x03\x02\x02\x02\xA6\xA8\v\x02\x02\x02\xA7\xA6\x03\x02\x02\x02" +
		"\xA8\xAB\x03\x02\x02\x02\xA9\xAA\x03\x02\x02\x02\xA9\xA7\x03\x02\x02\x02" +
		"\xAA\xAC\x03\x02\x02\x02\xAB\xA9\x03\x02\x02\x02\xAC\xAD\x05+\x16\x02" +
		"\xAD\xAE\x03\x02\x02\x02\xAE\xAF\b\x17\x02\x02\xAF.\x03\x02\x02\x02\xB0" +
		"\xB2\t\x04\x02\x02\xB1\xB0\x03\x02\x02\x02\xB2\xB3\x03\x02\x02\x02\xB3" +
		"\xB1\x03\x02\x02\x02\xB3\xB4\x03\x02\x02\x02\xB40\x03\x02\x02\x02\xB5" +
		"\xB6\t\x05\x02\x02\xB6\xB7\x03\x02\x02\x02\xB7\xB8\b\x19\x02\x02\xB82" +
		"\x03\x02\x02\x02\xB9\xBA\v\x02\x02\x02\xBA4\x03\x02\x02\x02\v\x02\x8E" +
		"\x93\x98\x9B\x9F\xA1\xA9\xB3\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!ArisLexer.__ATN) {
			ArisLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ArisLexer._serializedATN));
		}

		return ArisLexer.__ATN;
	}

}

